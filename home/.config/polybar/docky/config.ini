;; ┌────────────────────────────────────────────────────────────┐
;; │░█▀█░█▀█░█░░░█░█░█▀▄░█▀█░█▀▄░░░░░░░░░█▀▀░█▀█░█▀█░█▀▀░▀█▀░█▀▀│
;; │░█▀▀░█░█░█░░░░█░░█▀▄░█▀█░█▀▄░░░░▀░░░░█░░░█░█░█░█░█▀▀░░█░░█░█│
;; │░▀░░░▀▀▀░▀▀▀░░▀░░▀▀░░▀░▀░▀░▀░░░░▀░░░░▀▀▀░▀▀▀░▀░▀░▀░░░▀▀▀░▀▀▀│
;; │░Created░By░Aditya░Shakya░@adi1090x░░░░░░░░░░░░░░░░░░░░░░░░░│
;; └────────────────────────────────────────────────────────────┘

;; Global WM Settings
[global/wm]
; Adjust the _NET_WM_STRUT_PARTIAL top value
; Used for top aligned bars
margin-bottom = 0

; Adjust the _NET_WM_STRUT_PARTIAL bottom value
; Used for bottom aligned bars
margin-top = 0

; include an external file, like module file, etc.
include-file = ~/.config/polybar/docky/bars.ini
include-file = ~/.config/polybar/docky/colors.ini
include-file = ~/.config/polybar/docky/modules.ini
include-file = ~/.config/polybar/docky/user_modules.ini

[module/previous]
type = custom/ipc
format = <output>
format-padding = 1
format-font = 1
hook-0 = echo "%{F#FF4747}%{F-}"
click-left = spotifyctl -q previous
initial = 1

[module/next]
type = custom/ipc
format = <output>
format-padding = 1
format-font = 1
hook-0 = echo "%{F#FF4747}%{F-}"
click-left = spotifyctl -q next
initial = 1

[module/play]
type = custom/ipc
format = <output>
format-padding = 1
format-font = 1
hook-0 = echo "%{F#FF4747}%{F-}"
click-left = spotifyctl -q play
initial = 1

[module/pause]
type = custom/ipc
format = <output>
format-padding = 1
format-font = 1
hook-0 = echo "%{F#FF4747}%{F-}"
click-left = spotifyctl -q pause
initial = 1

[module/spotify]
type = custom/script
; exec = spotifyctl -q status --format '%{F#FF4747}%artist%: %title%%{F-}'
exec = printf '%%{F#FF4747}%s%%{F-}' "$(wmctrl -lx | pcregrep -o1 '0x[0-9a-z]+ +[0-9]+ +spotify.Spotify +.*? +(.* - .*)')"
tail = false
interval = 1
format = <label>
label = %output%

;; Bar Settings
[bar/DVI-1]
monitor = DVI-1
monitor-fallback = HDMI-0
monitor-strict = false
bottom = false
fixed-center = true
width = 98%
height = 40
offset-x = 1%
offset-y = 2%:-10
background = ${color.background}
foreground = ${color.foreground}
radius-top = 0.0
radius-bottom = 0.0
line-size = 2
line-color = ${color.primary}
border-bottom-size = 2
border-bottom-color = ${color.primary}
padding = 0
module-margin-left = 2
module-margin-right = 0
font-0 = "Iosevka Nerd Font:size=10;3"
font-1 = "feather:size=12;3"
modules-left = launcher workspaces
modules-center =
modules-right = network cpu pulseaudio date sysmenu
separator =
dim-value = 1.0
wm-name = bspwm
locale = en_US.UTF-8
override-redirect = false
wm-restack = bspwm
enable-ipc = true
scroll-up = bspc desktop -f next.local
scroll-down = bspc desktop -f prev.local
cursor-click = pointer
cursor-scroll = pointer
tray-position = right
tray-detached = false
tray-maxsize = 16
tray-background = ${color.background}
tray-offset-x = 0
tray-offset-y = 0
tray-padding = 0
tray-scale = 1

[bar/DVI-0]
; polybar -m | cut -d ':' -f 1  OR  xrandr -q | grep " connected" | cut -d ' ' -f1
monitor = DVI-0

; Use the specified monitor as a fallback if the main one is not found.
monitor-fallback = HDMI-0

; Require the monitor to be in connected state. XRandR sometimes reports my
; monitor as being disconnected (when in use)
monitor-strict = false

; Put the bar at the bottom of the screen
bottom = false

; Prefer fixed center position for the `modules-center` block. When false, the
; center position will be based on the size of the other blocks.
fixed-center = true

; The separator will be inserted between the output of each module
separator =

; Opacity value between 0.0 and 1.0 used on fade in/out
dim-value = 1.0

; Number of spaces to add at the beginning/end of the bar. Individual side
; values can be defined using: padding-{left,right}
padding = 0

; Value to be used to set the WM_NAME atom. Default: polybar-[BAR]_[MONITOR]
wm-name = bspwm

; Locale used to localize various module data (e.g. date)
locale = en_US.UTF-8

; Tell the Window Manager not to configure the window. Use this to detach the
; bar if your WM is locking its size/position.
override-redirect = false

; Set a DPI values used when rendering text. This only affects scalable fonts.
; dpi =

; Enable support for inter-process messaging - See the Messaging wiki page for
; more details.
enable-ipc = true
click-left =
click-middle =
click-right =
scroll-up = bspc desktop -f next.local
scroll-down = bspc desktop -f prev.local
double-click-left =
double-click-middle =
double-click-right =

; Position of the tray, or none to disable tray on this bar. (left|center|right|none)
tray-position = none

; If true, the bar will not shift its contents when the tray changes.
tray-detached = false

; Tray icon max size
tray-maxsize = 16

; Tray bg ARBG color - Defaults to bar background color.
tray-background = ${color.background}

; Tray X & Y offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
tray-offset-x = 0
tray-offset-y = 0

; Pad the sides of each tray icon
tray-padding = 0

; Scale factor for tray clients
tray-scale = 1

; Number of spaces to add before/after each module. Individual side values can
; be defined using: module-margin-{left,right}
module-margin-left = 2
module-margin-right = 0

modules-left = launcher workspaces
modules-center =
modules-right = color-switch pulseaudio date sysmenu

; Dimension defined as pixel value (e.g. 35) or percentage (e.g. 50%),
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in a width or height of 50% minus 10 pixels
width = 98%
height = 40

; Offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in an offset in the x or y direction of 50%
; minus 10 pixels
offset-x = 1%
offset-y = 2%:-10

; Bg & Fg ARGB color (e.g. #f00, #ff992a, #ddff1023)
background = ${color.background}
foreground = ${color.foreground}
; background-0 = ; Background gradient (vertical steps): background-[0-9]+ = #aarrggbb

; Value used for drawing rounded corners
; Note: This shouldn't be used together with border-size because the border
; doesn't get rounded
; Individual top/bottom values can be defined using:
;   radius-{top,bottom}
radius-top = 0.0
radius-bottom = 0.0

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
line-size = 2
line-color = ${color.primary}

; Values applied to all borders
; Individual side values can be defined using:
;   border-{left,top,right,bottom}-size
;   border-{left,top,right,bottom}-color
; The top and bottom borders are added to the bar height, so the effective
; window height is:
;   height + border-top-size + border-bottom-size
; Meanwhile the effective window width is defined entirely by the width key and
; the border is placed withing this area. So you effectively only have the
; following horizontal space on the bar:
;   width - border-right-size - border-left-size
border-bottom-size = 2
border-bottom-color = ${color.primary}

; Fonts are defined using <font-name>;<vertical-offset>
; Font names are specified using a fontconfig pattern.
;   font-0 = NotoSans-Regular:size=8;2
;   font-1 = MaterialIcons:size=10
;   font-2 = Termsynu:size=8;-1
;   font-3 = FontAwesome:size=10
; See the Fonts wiki page for more details
font-0 = "Iosevka Nerd Font:size=10;3"
font-1 = "feather:size=12;3"

; Restack the bar window and put it above the selected window manager's root.
; Fixes the issue where the bar is being drawn on top of fullscreen windows.
; Currently supported WM's: 'bspwm', 'i3' (requires: override-redirect = true)
wm-restack = bspwm

; Requires polybar to be built with xcursor support (xcb-util-cursor)
;   default    The default pointer as before, can also be an empty string (default)
;   pointer    Typically in the form of a hand
;   ns-resize  Up and down arrows, can be used to indicate scrolling
cursor-click = pointer
cursor-scroll = pointer

[settings]
; The throttle settings lets the eventloop swallow up til X events
; if they happen within Y millisecond after first event was received.
; This is done to prevent flood of update event.
;
; For example if 5 modules emit an update event at the same time, we really
; just care about the last one. But if we wait too long for events to swallow
; the bar would appear sluggish so we continue if timeout
; expires or limit is reached.
throttle-output = 5
throttle-output-for = 10

; Time in milliseconds that the input handler will wait between processing events
;throttle-input-for = 30

; Reload upon receiving XCB_RANDR_SCREEN_CHANGE_NOTIFY events
screenchange-reload = false

; Compositing operators
; @see: https://www.cairographics.org/manual/cairo-cairo-t.html#cairo-operator-t
compositing-background = source
compositing-foreground = over
compositing-overline = over
compositing-underline = over
compositing-border = over

; Define fallback values used by all module formats
;format-foreground =
;format-background =
;format-underline =
;format-overline =
;format-spacing =
;format-padding =
;format-margin =
;format-offset =

; Enables pseudo-transparency for the bar
; If set to true the bar can be transparent without a compositor.
pseudo-transparency = false
